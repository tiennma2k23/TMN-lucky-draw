const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function main() {
  // XÃ³a toÃ n bá»™ dá»¯ liá»‡u cÅ©
  await prisma.winner.deleteMany()
  await prisma.roundPrize.deleteMany()
  await prisma.prize.deleteMany()
  await prisma.drawRound.deleteMany()
  await prisma.participant.deleteMany()
  await prisma.settings.deleteMany()

  // Táº¡o settings máº·c Ä‘á»‹nh
  await prisma.settings.create({
    data: {
      id: "1",
      backgroundImage: null
    }
  })

  // Táº¡o cÃ¡c giáº£i thÆ°á»Ÿng
  const prizes = await Promise.all([
    // Giáº£i nháº¥t
    prisma.prize.create({
      data: {
        name: "Giáº£i nháº¥t",
        description: "Giáº£i nháº¥t",
      }
    }),
    // Giáº£i nhÃ¬
    prisma.prize.create({
      data: {
        name: "Giáº£i nhÃ¬",
        description: "Giáº£i nhÃ¬",
      }
    }),
    // Giáº£i ba
    prisma.prize.create({
      data: {
        name: "Giáº£i ba",
        description: "Giáº£i ba",
      }
    }),
    // Giáº£i khuyáº¿n khÃ­ch
    prisma.prize.create({
      data: {
        name: "Giáº£i khuyáº¿n khÃ­ch",
        description: "Giáº£i khuyáº¿n khÃ­ch",
      }
    }),
  ])

  // Táº¡o cÃ¡c láº§n quay
  const rounds = []
  
  // Láº§n 1
  const round1 = await prisma.drawRound.create({
    data: {
      name: "Láº§n 1",
      description: "10 giáº£i khuyáº¿n khÃ­ch, 1 giáº£i ba",
      date: new Date(),
      order: 1,
      prizes: {
        create: [
          { prizeId: prizes[3].id, quantity: 10 }, // Khuyáº¿n khÃ­ch
          { prizeId: prizes[2].id, quantity: 1 }, // Ba
        ]
      }
    }
  })
  rounds.push(round1)

  // Láº§n 2
  const round2 = await prisma.drawRound.create({
    data: {
      name: "Láº§n 2",
      description: "10 giáº£i khuyáº¿n khÃ­ch, 1 giáº£i ba",
      date: new Date(),
      order: 2,
      prizes: {
        create: [
          { prizeId: prizes[3].id, quantity: 10 }, // Khuyáº¿n khÃ­ch
          { prizeId: prizes[2].id, quantity: 1 }, // Ba
        ]
      }
    }
  })
  rounds.push(round2)

  // Láº§n 3
  const round3 = await prisma.drawRound.create({
    data: {
      name: "Láº§n 3",
      description: "10 giáº£i khuyáº¿n khÃ­ch, 1 giáº£i ba, 1 giáº£i nhÃ¬",
      date: new Date(),
      order: 3,
      prizes: {
        create: [
          { prizeId: prizes[3].id, quantity: 10 }, // Khuyáº¿n khÃ­ch
          { prizeId: prizes[2].id, quantity: 1 }, // Ba
          { prizeId: prizes[1].id, quantity: 1 }, // NhÃ¬
        ]
      }
    }
  })
  rounds.push(round3)

  // Láº§n 4
  const round4 = await prisma.drawRound.create({
    data: {
      name: "Láº§n 4",
      description: "10 giáº£i khuyáº¿n khÃ­ch, 1 giáº£i nhÃ¬",
      date: new Date(),
      order: 4,
      prizes: {
        create: [
          { prizeId: prizes[3].id, quantity: 10 }, // Khuyáº¿n khÃ­ch
          { prizeId: prizes[1].id, quantity: 1 }, // NhÃ¬
        ]
      }
    }
  })
  rounds.push(round4)

  // Láº§n 5
  const round5 = await prisma.drawRound.create({
    data: {
      name: "Láº§n 5",
      description: "10 giáº£i khuyáº¿n khÃ­ch, 1 giáº£i nháº¥t",
      date: new Date(),
      order: 5,
      prizes: {
        create: [
          { prizeId: prizes[3].id, quantity: 10 }, // Khuyáº¿n khÃ­ch
          { prizeId: prizes[0].id, quantity: 1 }, // Nháº¥t
        ]
      }
    }
  })
  rounds.push(round5)

  console.log('Database has been seeded. ðŸŒ±')
}

main()
  .catch((e) => {
    console.error(e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  }) 